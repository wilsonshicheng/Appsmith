{
  "pluginType": "JS",
  "pluginId": "js-plugin",
  "unpublishedAction": {
    "name": "UserCheck",
    "fullyQualifiedName": "UserCheck.UserCheck",
    "datasource": {
      "name": "UNUSED_DATASOURCE",
      "pluginId": "js-plugin",
      "messages": [],
      "isAutoGenerated": false,
      "deleted": false,
      "policies": [],
      "userPermissions": []
    },
    "pageId": "01-LoginPage",
    "collectionId": "01-LoginPage_UserCheck",
    "actionConfiguration": {
      "timeoutInMillisecond": 10000,
      "paginationType": "NONE",
      "encodeParamsToggle": true,
      "body": "async (userId, password) => {\n  try {\n    const response = await fetch('/api/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        userId,\n        password\n      })\n    });\n    const result = await response.json();\n    if (result.success) {\n      console.log('Login successful');\n    } else {\n      console.log('Login failed: ' + result.message);\n    }\n  } catch (error) {\n    console.error('Error:', error);\n    console.log('An error occurred during login');\n  }\n}",
      "selfReferencingDataPaths": [],
      "jsArguments": [
        {},
        {}
      ],
      "isAsync": true
    },
    "executeOnLoad": false,
    "dynamicBindingPathList": [
      {
        "key": "body"
      }
    ],
    "isValid": true,
    "invalids": [],
    "messages": [],
    "jsonPathKeys": [
      "async (userId, password) => {\n  try {\n    const response = await fetch('/api/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        userId,\n        password\n      })\n    });\n    const result = await response.json();\n    if (result.success) {\n      console.log('Login successful');\n    } else {\n      console.log('Login failed: ' + result.message);\n    }\n  } catch (error) {\n    console.error('Error:', error);\n    console.log('An error occurred during login');\n  }\n}"
    ],
    "userSetOnLoad": false,
    "confirmBeforeExecute": false,
    "policies": [],
    "userPermissions": []
  },
  "id": "01-LoginPage_UserCheck.UserCheck",
  "deleted": false,
  "gitSyncId": "66b2bdab9d28026fe788a1bc_66b308079d28026fe788a2b1"
}